System.register(["./__root_module__-c4d7431e.js","kld-intersections"],function(ta){var nb,Bb,Vb,Qb,Dd;return{setters:[function(Ic){nb=Ic._;Bb=Ic.bl;Vb=Ic.a5;Qb=Ic.a6;Dd=Ic.aq},function(){}],execute:function(){function Ic(Yc,Ta){Ta=void 0===Ta?{}:Ta;var sb=Ta.l2lClient;if(!sb)throw Error("lively.shell client side runCommand needs opts.l2lClient!");nd.ClientCommand.installLively2LivelyServices(sb);sb=new nd.ClientCommand(sb);sb.spawn(Object.assign({command:Yc},nd.obj.dissoc(Ta,["l2lClient"])));
return sb}function ud(Yc){return nd.dirCache[Yc.trackerId]?nd.dirCache[Yc.trackerId]:Promise.resolve().then(function(){var Ta,sb,dc;return $jscomp.asyncExecutePromiseGeneratorProgram(function(ac){if(1==ac.nextAddress)return ac.yield(Yc.sendToAndWait(Yc.trackerId,"lively.shell.info",{}),2);Ta=ac.yieldResult;sb=Ta.data;dc=sb.defaultDirectory;return ac.return(nd.dirCache[Yc.trackerId]=dc)})})}function Nc(Yc){var Ta,sb,dc;return $jscomp.asyncExecutePromiseGeneratorProgram(function(ac){if(1==ac.nextAddress)return ac.yield(Yc.sendToAndWait(Yc.trackerId,
"lively.shell.env",{}),2);Ta=ac.yieldResult;sb=Ta.data;dc=sb.env;return ac.return(dc)})}function Jc(Yc,Ta){Ta=(Ta=void 0===Ta?{}:Ta)||{};var sb=nd.runCommand('cat "'+Yc+'"',Ta);return sb.whenDone().then(function(){if(sb.exitCode)throw Error("Read "+Yc+" failed: "+sb.stderr);return sb.output})}function Xc(Yc,Ta,sb){!sb&&Ta&&Ta.content&&(sb=Ta,Ta=sb.content);var dc=nd.runCommand('tee "'+Yc+'"',Object.assign({stdin:Ta||""},sb));return dc.whenDone().then(function(){if(dc.exitCode)throw Error("Write "+
Yc+" failed: "+dc.stderr);return dc})}ta({defaultDirectory:ud,env:Nc,readFile:Jc,runCommand:Ic,writeFile:Xc});var id=lively.FreezerRuntime.recorderFor("lively.shell/command-interface.js");id.promise=nb;id.events=Bb;var Fd=function(){this._stderr=this._stdout="";this.exitCode=void 0;this.commandString="";this.process=null;this._whenDone=id.promise.deferred();this._whenStarted=id.promise.deferred();this.startTime=0;this.lastSignal=null;id.events.makeEmitter(this)};Fd.findCommand=function(Yc){return this.commands.find(function(Ta){return Ta.pid===
Yc})};Fd.prototype.isRunning=function(){return this.process&&void 0===this.exitCode};Fd.prototype.isDone=function(){return void 0!=this.exitCode};Fd.prototype.whenStarted=function(){return this._whenStarted.promise};Fd.prototype.whenDone=function(){return this._whenDone.promise};Fd.prototype.spawn=function(Yc){throw Error("not yet implemented");};Fd.prototype.kill=function(Yc){this.lastSignal=void 0===Yc?"KILL":Yc};Fd.prototype.toString=function(){return this.constructor.name+"("+this.commandString+
", "+this.status+")"};$jscomp.global.Object.defineProperties(Fd.prototype,{isShellCommand:{configurable:!0,enumerable:!0,get:function(){return!0}},status:{configurable:!0,enumerable:!0,get:function(){return this.process?void 0===this.exitCode?"running, pid "+this.pid:"exited "+this.exitCode+", pid "+this.pid:"not started"}},pid:{configurable:!0,enumerable:!0,get:function(){return this.process?this.process.pid:null}},output:{configurable:!0,enumerable:!0,get:function(){return this.stdout+(this.stderr?
"\n"+this.stderr:"")}},stdout:{configurable:!0,enumerable:!0,get:function(){return this._stdout}},stderr:{configurable:!0,enumerable:!0,get:function(){return this._stderr}}});$jscomp.global.Object.defineProperties(Fd,{commands:{configurable:!0,enumerable:!0,get:function(){return this._commands||(this._commands=[])}}});id.CommandInterface=Fd;id.default=Fd;var nd=lively.FreezerRuntime.recorderFor("lively.shell/client-command.js");nd.runCommand=Ic;nd.defaultDirectory=ud;nd.env=Nc;nd.readFile=Jc;nd.writeFile=
Xc;nd.CommandInterface=Fd;nd.promise=nb;nd.arr=Vb;nd.obj=Qb;nd.signal=Dd;nd.debug=!1;nd.runCommand=Ic;nd.runCommand=Ic;nd.dirCache={};nd.defaultDirectory=ud;nd.defaultDirectory=ud;nd.env=Nc;nd.env=Nc;nd.readFile=Jc;nd.readFile=Jc;nd.writeFile=Xc;nd.writeFile=Xc;Fd=function(Yc){var Ta=nd.CommandInterface.call(this)||this;Ta.debug=nd.debug;Ta.l2lClient=Yc;return Ta};$jscomp.inherits(Fd,nd.CommandInterface);Fd.installLively2LivelyServices=function(Yc){Object.keys(nd.L2LServices).forEach(function(Ta){return Yc.addService(Ta,
function(sb,dc,ac){return $jscomp.asyncExecutePromiseGeneratorProgram(function(Vc){return Vc.return(nd.L2LServices[Ta](sb,dc,ac))})})})};Fd.prototype.envForCommand=function(Yc){var Ta=this.l2lClient,sb=Ta.id,dc=Ta.origin,ac=Ta.path;Ta=Ta.namespace;var Vc=Yc||{};Yc=Vc.env;Vc=Vc.owner;Yc=Yc||{};Vc&&(Yc.LIVELY_COMMAND_OWNER=Vc);return Object.assign({ASKPASS_SESSIONID:sb,L2L_EDITOR_SESSIONID:sb,L2L_SESSIONTRACKER_SERVER:dc,L2L_SESSIONTRACKER_PATH:ac,L2L_SESSIONTRACKER_NS:Ta},Yc)};Fd.prototype.spawn=function(Yc){Yc=
void 0===Yc?{command:null,env:{},cwd:null,stdin:null}:Yc;var Ta=this,sb,dc,ac,Vc,Hd,hc,kc,xb,yb,wc,Kc;return $jscomp.asyncExecutePromiseGeneratorProgram(function(zb){if(1==zb.nextAddress)return sb=Ta,dc=sb.l2lClient,ac=Yc,Vc=ac.command,Hd=ac.env,hc=ac.cwd,kc=ac.stdin,Ta.startTime=new Date,Hd=Ta.envForCommand(Yc),Ta.debug&&console.log(Ta+" spawning "+Vc),Ta.debug&&Ta.whenStarted().then(function(){return console.log(Ta+" started")}),Ta.debug&&Ta.whenDone().then(function(){return console.log(Ta+" exited")}),
nd.arr.pushIfNotIncluded(Ta.constructor.commands,Ta),Ta.commandString=Array.isArray(Vc)?Vc.join(""):Vc,zb.yield(dc.sendToAndWait(dc.trackerId,"lively.shell.spawn",{command:Vc,env:Hd,cwd:hc,stdin:kc},{ackTimeout:3E4}),2);xb=zb.yieldResult;yb=xb.data;wc=yb.error;Kc=yb.pid;if(wc)throw nd.debug&&console.error("["+Ta+"] error at start: "+wc),Ta.process={error:wc},Ta.exitCode=1,nd.signal(Ta,"error",wc),Error(wc);Ta.process={pid:Kc};nd.debug&&console.log("["+Ta+"] got pid "+Kc);nd.signal(Ta,"pid",Kc);Ta._whenStarted.resolve();
return zb.return(Ta)})};Fd.prototype.writeToStdin=function(Yc){var Ta=this,sb,dc,ac;return $jscomp.asyncExecutePromiseGeneratorProgram(function(Vc){if(!Ta.isRunning())return Vc.return();sb=Ta;dc=sb.l2lClient;ac=sb.pid;return Vc.yield(dc.sendToAndWait(dc.trackerId,"lively.shell.writeToStdin",{pid:ac,stdin:String(Yc)}),0)})};Fd.prototype.kill=function(Yc){Yc=void 0===Yc?"KILL":Yc;var Ta=this,sb,dc,ac,Vc,Hd,hc,kc;return $jscomp.asyncExecutePromiseGeneratorProgram(function(xb){if(1==xb.nextAddress){if(!Ta.isRunning())return xb.return();
nd.debug&&console.log(Ta+" signaling "+Yc);Ta.lastSignal=Yc;sb=Ta;dc=sb.pid;ac=sb.l2lClient;return xb.yield(ac.sendToAndWait(ac.trackerId,"lively.shell.kill",{pid:dc}),2)}Vc=xb.yieldResult;Hd=Vc.data;hc=Hd.status;kc=Hd.error;nd.debug&&console.log(Ta+" kill send: "+(kc||hc));if(kc)throw Error(kc);return xb.return(Ta.whenDone())})};Fd.prototype.onOutput=function(Yc){var Ta=Yc.stdout;Yc=Yc.stderr;Ta&&(this._stdout+=Ta,nd.signal(this,"stdout",Ta),this.emit("stdout",Ta));Yc&&(this._stderr+=Yc,nd.signal(this,
"stderr",Yc),this.emit("stderr",Yc))};Fd.prototype.onClose=function(Yc){nd.arr.remove(this.constructor.commands,this);this.exitCode=Yc;this.emit("close",Yc);nd.signal(this,"close",Yc);this._whenDone.resolve(this)};Fd.prototype.onError=function(Yc){nd.arr.remove(this.constructor.commands,this);this._stderr+=Yc.stack;this.exitCode=1;this.emit("error",Yc.stack);nd.signal(this,"error",Yc.stack);this._whenDone.reject(Yc)};ta("default",Fd);nd.ClientCommand=Fd;nd.L2LServices={"lively.shell.onOutput":function(Yc,
Ta,sb,dc){Yc=Ta.data;var ac=Yc.pid,Vc=Yc.stdout,Hd=Yc.stderr,hc;return $jscomp.asyncExecutePromiseGeneratorProgram(function(kc){switch(kc.nextAddress){case 1:return nd.debug&&console.log("[lively.shell] client received lively.shell.onOutput for command "+ac),kc.setCatchFinallyBlocks(2),kc.yield(nd.promise.waitFor(1E3,function(){return nd.ClientCommand.findCommand(ac)}),4);case 4:hc=kc.yieldResult;kc.leaveTryBlock(3);break;case 2:return kc.enterCatchBlock(),console.warn("[lively.shell] received output for command "+
ac+" but it isn't registered!'"),kc.return();case 3:hc.onOutput({stdout:Vc,stderr:Hd}),kc.jumpToEnd()}})},"lively.shell.onExit":function(Yc,Ta,sb,dc){Yc=Ta.data;var ac=Yc.pid,Vc=Yc.code,Hd=Yc.error,hc;return $jscomp.asyncExecutePromiseGeneratorProgram(function(kc){switch(kc.nextAddress){case 1:return nd.debug&&console.log("[lively.shell] client received lively.shell.onExit for command "+ac),kc.setCatchFinallyBlocks(2),kc.yield(nd.promise.waitFor(1E3,function(){return nd.ClientCommand.findCommand(ac)}),
4);case 4:hc=kc.yieldResult;kc.leaveTryBlock(3);break;case 2:return kc.enterCatchBlock(),console.warn("[lively.shell] received exit message for command "+ac+" but it isn't registered!'"),kc.return();case 3:if(Hd)"string"===typeof Hd&&(Hd=Error(Hd)),hc.onError(Hd);else hc.onClose(Vc);kc.jumpToEnd()}})}};nd.default=Fd}}});